name: Publish Docker image

on:
  release:
    types: [published]

env:
  REGISTRY_IMAGE: christmagri/nanit

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/386
          - linux/arm/v7
          - linux/arm/v8
          - linux/arm64
          - linux/arm64/v8
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set platform-safe name
        id: set_name
        run: |
          PLATFORM_SAFE_NAME="${{ matrix.platform }}"
          PLATFORM_SAFE_NAME="${PLATFORM_SAFE_NAME//\//-}"  # Replace '/' with '-'
          echo "platform_safe_name=$PLATFORM_SAFE_NAME" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"          
      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ github.run_id }}-${{ github.run_attempt }}-${{ env.platform_safe_name }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Set platform-safe name
        id: set_name
        run: |
          PLATFORM_SAFE_NAME="${{ matrix.platform }}"
          PLATFORM_SAFE_NAME="${PLATFORM_SAFE_NAME//\//-}"  # Replace '/' with '-'
          echo "platform_safe_name=$PLATFORM_SAFE_NAME" >> $GITHUB_ENV
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
            digests=()
            for file in *; do
              [ -f "$file" ] || continue
              digests+=("${{ env.REGISTRY_IMAGE }}@sha256:$(cat "$file")")
            done
            
            docker buildx imagetools create -t ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }} "${digests[@]}"    
      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}          